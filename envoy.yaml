static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
      - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: mock_route
                virtual_hosts:
                  - name: backend
                    domains:
                      - "*"
                    routes:
                      - match:
                          prefix: "/"
                        direct_response:
                          status: "200"
                          body:
                            inline_string: "Hello World"
              http_filters:
                - name: envoy.filters.http.wasm
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                    config:
                      name: http-header-to-hash-filter
                      root_id: http-header-to-hash-filter
                      fail_open: false
                      configuration:
                        "@type": "type.googleapis.com/google.protobuf.StringValue"
                        value: |
                          h1: h2
                          h3: h3
                      vm_config:
                        vm_id: vm.http-header-to-hash-filter
                        runtime: envoy.wasm.runtime.v8
                        code:
                          local:
                            filename: /opt/http-header-to-hash-filter.wasm
                        allow_precompiled: true
                - name: envoy.lua
                  typed_config:
                    '@type': 'type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua'
                    inlineCode: |
                      function envoy_on_request(request_handle)
                        local request_headers = request_handle:headers()
                        for key, value in pairs(request_headers) do
                          print(string.format(" - %s: %s", tostring(key), tostring(value)))
                        end
                      end
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router          
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001